/*
_____

TYPESETTING
_____
*/

@function check-font-size( $value: 1rem ) {
  @if strip-unit($value) < strip-unit($font-size-min) {
    @return $font-size-min;
  }
  @if strip-unit($value) > strip-unit($font-size-max) {
    @return $font-size-max;
  }
  @return $value;
}

@function get-font-size( $factor: 1, $no-checks: false ) {
  $abs-factor: .4166; // we try to stay as close as possible as having rounded number once printed out
  $candidate: $factor * $abs-factor * $font-scale;
  @if $candidate > 1 {
    $candidate: round( $candidate );
  }
  $candidate: $candidate * 1rem;
  @if $no-checks == true{
    @return $candidate;
  }
  @return check-font-size( $candidate );
}

@function get-regular-font-size() {
  @return get-font-size( 1 );
}

%line-height {
  line-height: $font-line-height;
}

%typesetting {
  @extend %line-height;
  font-size: $font-size-default;

  @media print{
    font-size: $font-size-default--print;
  }
}

:root{
  @extend %typesetting;
}

body{
  font-size: .5em; // seems counter-intuitive?
  // default font-size in an element without specificity should be considered as "minor"
  // and, as such, being smaller then element with any/higher specificity
  // any subsequent root-em defined in any child will, by the way,
  // get the **root** value and not the body one.
  font-family: sans-serif;
}

/*
  Font-size is comprised between a minimum and a maximum value
  with the default size being the value passed to :root

  Every derivated font-size (in root em) will be based upon it.
*/
$font-size-max: get-font-size( 2, true );
$font-size-min: get-font-size( .76, true );
$font-size-regular: get-regular-font-size();

/*
  Why prefixing everything?

  Have you ever find yourself digging through someone else's codebase
  wondering if .row or .btn come from a vendor or a human colleague?

  Prefixing is a way to namespace things while expressing what's in your project
  come from this design system and what's yours.
*/

.#{$callisto}-h,
.#{$callisto}-p {
  margin: 0;

  & + .#{$callisto}-h,
  & + .#{$callisto}-p {
    margin-top: $gutter;
  }
}

.#{$callisto}-h{
  @extend %line-height;
}

.#{$callisto}-p{
  line-height: $line-height * 1.5;
}

.#{$callisto}-p {
  font-size: get-regular-font-size();
  // https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant
  // https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-alternates
  // font-feature-settings: 'kern', 'onum', 'liga';
  font-variant: normal; // TODO
}

.#{$callisto}-small{
  font-size: $font-size-min;
}
